<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="shortcut icon" href="#" />
  <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
  <title>Dashboard</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/css/bootstrap.min.css"
    integrity="sha384-DhY6onE6f3zzKbjUPRc2hOzGAdEf4/Dz+WJwBvEYL/lkkIsI3ihufq9hk9K4lVoK" crossorigin="anonymous" />
  <link rel="icon" href="resources/images/fevicon.png" type="image/png" />
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/dataTables.bootstrap5.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.min.css" />
  
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
  body {
    width: 100%;
    height: 100%;
  }
  .containers {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    
  }
  .cell {
    /* Eliminar la propiedad border */
    padding: 20px;
    text-align: center;
    background-color: white;
    box-shadow: 0 0 5px rgba(11, 11, 11, 0.97); /* Modificar los valores de acuerdo a tu preferencia */
    
  }
  .cell.doubles {
    grid-row-end: span 2; 
  }
  .cell.double {
    grid-column-end: span 2;
  }
  .cell.triple {
    grid-column-end: span 3;
  }
  .cell.quintuple {
    grid-column-end: span 3;
    grid-row-end: span 2; 
    height: 400px;
    
  }
  table.dataTable thead {
      background-color: #006400;
     
      color: rgb(250, 250, 250);
    }
    .btn-group img {
    max-width: 24px; /* Define el ancho máximo del icono */
    max-height: 24px; /* Define el alto máximo del icono */
}
body{
 
    background-color: #2b470000;
    margin:60px 0 0 0;
}
.fixed-width {
    min-width: 780px; /* O el ancho mínimo deseado */
}
.titulo-con-borde {
   
    -webkit-text-stroke: 0.5px white; /* Borde blanco de 1px */
   
}
.dashboard-cell {
  background-color: #f8f9fa;
  border-radius: 10px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  text-align: center;
  margin-bottom: 20px;
}

.dashboard-cell h1 {
  font-size: 50px;
  color: #081a64;;
  margin-bottom: 10px;
}

.dashboard-cell p {
  font-size: 18px;
  color: #6c757d;
}
.container {
    display: flex;
}

.labels {
    flex: 1;
    padding: 20px;
}

.chart {
    flex: 1;
    padding: 20px;
}

</style>

</head>
<body>
    <div class="container-fluid">
        <div class="containers">
            <div class="cell dashboard-cell" style="height: 200px;"> 
                <h1 id="ventasMes"></h1>
                <p>ventas del mes</p>
            </div>
            <div class="cell dashboard-cell" style="height: 200px;"> 
                <h1 id="ventasSemana"></h1>
                <p>ventas de la semana</p>
            </div>
            <div class="cell dashboard-cell" style="height: 200px;"> 
                <h1 id="clientesRegistradosMes"></h1>
                <p>Clientes Facturados en el mes</p>
            </div>
            <div class="cell dashboard-cell" style="height: 200px;"> 
                <h1 id="clientesTotales"></h1>
                <p>Total de clientes facturados</p>
            </div>
         
            

            
            <div class="cell dashboard-cell double fixed-width" style="height: 400px; color: #081a64;">
                <div class="row">
                    <div class="col-lg-6 col-sm-12">
                        <h4 class="h3 font-weight-bold">Ventas Mensuales</h3>
                    </div>
                    <div class="col-lg-6 col-sm-12">
                        Registro de ventas
                        <a id="btnCrear" href="/ventas" class="btn btn-group btn-light" style="width: 70px; color: white; font-size: 20px; margin-right: 5px; background-color: #081a64;">
                             Ver 
                        </a>
                    </div>
                </div>
                <canvas id="ventasMensualesCombo" width="700px" height="300px"></canvas>   
            </div>
            <div class="cell dashboard-cell double fixed-width" style="height: 400px; color: #081a64; display: flex; flex-direction: column;">
                <h3 class="h3 font-weight-bold">Top 10 Productos Más Vendidos</h3>
                <div style="flex: 1; display: flex;">
                    <div class="labels" style="flex: 1; padding: 10px; text-align: left;">
                        <ul id="productLabels"></ul>
                        <div class="row" style="margin-top: 20px;">
                            <div class="col-8 col-sm-6">
                                Registro de Productos
                            </div>
                            <div class="col-4 col-sm-6">
                                <a id="btnCrear" class="btn btn-group btn-light" href="/productos"
                                    style="width: 70px; height: 40px; color: white; font-size: 15px; margin-right: 5px; background-color: #081a64;">
                                    Ver
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="chart" style="flex: 1; padding: 10px; height: 330px;">
                        <canvas id="topProductosCanvas"></canvas>
                    </div>
                </div>
                
            </div>
            
            
            
            <div class="cell dashboard-cell doubles " style="height: 400px; color: #081a64;" >
                <h3 class="h3 font-weight-bold">Empleados con mayor ventas</h3>      
                <canvas id="ventasPorEmpleado2024" width="200px" height="120px"></canvas> 
            </div>
            <div class="cell dashboard-cell quintuple" style="color: #081a64">
                <div class="row">
                    <div class="col-8 col-sm-6">
                        <h3 class="h3 font-weight-bold titulo-con-borde">Grafico - Ventas por Gestiones</h3>
                    </div>
                    
                    <div class="col-4 col-sm-6">
                        Registro de ventas
                        <a id="btnCrear" href="/ventas" class="btn btn-group btn-light" style="width: 70px; color: white; font-size: 20px; margin-right: 5px; background-color:#081a64;">
                            Ver
                        </a>
                    </div>
                </div>

               
                <canvas id="graficoVentasAnuales" style="width: 100%; height: 300px"></canvas>
            </div>

            <div class="cell dashboard-cell" style="height: 400px; text-align: center; padding: 20%;">  
                <h1 id="comprasTotales"></h1>
                <p>Total de Compras </p>
    
                <h1 id="productosComprados"></h1>
                <p>Total de Productos comprados</p>
            </div>
            <div class="cell dashboard-cell double" style="height: 400px;">
                <div class="row">
                    <div class="col-8 col-sm-6">
                        <h3 class="h3 font-weight-bold titulo-con-borde">Grafico - Compras por Gestiones</h3>
                    </div>
                    
                    <div class="col-4 col-sm-6">
                        Registro de ventas
                        <a id="btnCrear" href="/compras" class="btn btn-group btn-light" style="width: 70px; color: white; font-size: 20px; margin-right: 5px; background-color:#081a64;">
                            Ver
                        </a>
                    </div>
                </div>

                <canvas id="line-chart" style="width: 100%; height: 300px"></canvas>
             
            </div>
            <div class="cell dashboard-cell" style="height: 400px; color: #081a64;">
                <div>
                    <h3 class="h3 font-weight-bold titulo-con-borde">Compras a Proveedores</h3>
                </div>
                <div>
                    <div id="proveedores-lista" style="flex: 1; padding: 10px; text-align: left;"></div>
                    <div class="">
                            Registro de ventas
                            <a id="btnCrear" href="/compras" class="btn btn-group btn-light" style="width: 70px; color: white; font-size: 20px; margin-right: 5px; background-color:#081a64;">
                                Ver
                            </a>
                        </div>
                    </div>
                <div  id="proveedores-lista"></div>
            </div>
       
           
        </div>
    </div>
</body>

<script>
document.addEventListener("DOMContentLoaded", function() {
    const labels = <%= JSON.stringify(labels) %>;
    const data = <%= JSON.stringify(data) %>;
    
    const ctx = document.getElementById('graficoVentasAnuales').getContext('2d');
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Ventas Anuales',
                data: data,
                backgroundColor: 'rgba(84, 198, 253, 0.2)', // Color de fondo
                borderColor: '#00aae4', // Color del borde
                borderWidth: 2, // Ancho del borde
                pointRadius: 5, // Tamaño del punto
                pointBackgroundColor: '#00aae4', // Color del punto
                pointBorderColor: '#ffffff', // Color del borde del punto
                pointHoverRadius: 7, // Tamaño del punto al pasar el mouse
                fill: false // No rellenar el área bajo la línea
            }]
        },
        options: {
            scales: {
                xAxes: [{
                    type: 'time', // Tipo de escala de tiempo
                    time: {
                        unit: 'year', // Unidad de tiempo (año)
                        displayFormats: {
                            year: 'YYYY' // Formato de visualización de año
                        }
                    }
                }],
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
});


document.addEventListener("DOMContentLoaded", function() {
    fetch('/ventas-por-empleado-2024')
        .then(response => response.json())
        .then(data => {
            const ctx = document.getElementById('ventasPorEmpleado2024').getContext('2d');
            new Chart(ctx, {
                type: 'polarArea',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Ventas por Empleado 2024',
                        data: data.data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',   // #ff6384
                            'rgba(54, 162, 235, 0.5)',   // #36a2eb
                            'rgba(255, 206, 86, 0.5)',   // #ffce56
                            'rgba(255, 159, 64, 0.5)',   // #ff9f40
                            'rgba(75, 192, 192, 0.5)',  // #4bc0c0
                            'rgba(153, 102, 255, 0.5)', // #9966ff
                            'rgba(255, 99, 132, 0.5)',   // #ff4757
                            'rgba(142, 68, 173, 0.5)',  // #8e44ad
                            'rgba(52, 152, 219, 0.5)',  // #3498db
                            'rgba(231, 76, 60, 0.5)'    // #e74c3c
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',    // #ff6384
                            'rgba(54, 162, 235, 1)',    // #36a2eb
                            'rgba(255, 206, 86, 1)',    // #ffce56
                            'rgba(255, 159, 64, 1)',    // #ff9f40
                            'rgba(75, 192, 192, 1)',    // #4bc0c0
                            'rgba(153, 102, 255, 1)',   // #9966ff
                            'rgba(255, 99, 132, 1)',    // #ff4757
                            'rgba(142, 68, 173, 1)',    // #8e44ad
                            'rgba(52, 152, 219, 1)',    // #3498db
                            'rgba(231, 76, 60, 1)'      // #e74c3c
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    legend: {
                        position: 'right',
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
});

document.addEventListener("DOMContentLoaded", function() {
    fetch('/ventas-mensuales-ultimo-ano')
        .then(response => response.json())
        .then(data => {
            const ctx = document.getElementById('ventasMensualesCombo').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.labels,
                    datasets: [{
                        label: 'Ventas Mensuales',
                        data: data.data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',   // #ff6384
                            'rgba(54, 162, 235, 0.5)',   // #36a2eb
                            'rgba(255, 206, 86, 0.5)',   // #ffce56
                            'rgba(255, 159, 64, 0.5)',   // #ff9f40
                            'rgba(75, 192, 192, 0.5)',  // #4bc0c0
                            'rgba(153, 102, 255, 0.5)', // #9966ff
                            'rgba(255, 99, 132, 0.5)',   // #ff4757
                            'rgba(142, 68, 173, 0.5)',  // #8e44ad
                            'rgba(52, 152, 219, 0.5)',  // #3498db
                            'rgba(231, 76, 60, 0.5)'    // #e74c3c
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',    // #ff6384
                            'rgba(54, 162, 235, 1)',    // #36a2eb
                            'rgba(255, 206, 86, 1)',    // #ffce56
                            'rgba(255, 159, 64, 1)',    // #ff9f40
                            'rgba(75, 192, 192, 1)',    // #4bc0c0
                            'rgba(153, 102, 255, 1)',   // #9966ff
                            'rgba(255, 99, 132, 1)',    // #ff4757
                            'rgba(142, 68, 173, 1)',    // #8e44ad
                            'rgba(52, 152, 219, 1)',    // #3498db
                            'rgba(231, 76, 60, 1)'      // #e74c3c
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    responsive: false // Hacer el gráfico responsive
                }
            });
        });
});


document.addEventListener("DOMContentLoaded", function () {
    fetch('/top-10-productos-vendidos')
        .then(response => response.json())
        .then(data => {
            const ctx = document.getElementById('topProductosCanvas').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    datasets: [{
                        label: 'Producto',
                        data: data.data,
                        backgroundColor: [
                            '#ff6384', '#36a2eb', '#ffce56', '#ff8a65', '#4bc0c0',
                            '#9966ff', '#ff4757', '#8e44ad', '#3498db', '#e74c3c'
                        ],
                        borderColor: '#ffffff',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                       
                        fontSize: 18,
                        padding: 20
                    },
                    legend: {
                        display: false
                    },
                    cutout: '70%'
                }
            });

            const labelsContainer = document.getElementById('productLabels');
            data.labels.forEach(label => {
                const li = document.createElement('li');
                li.textContent = label;
                labelsContainer.appendChild(li);
            });
        });
});

// Suponiendo que tienes Chart.js incluido en tu proyecto
document.addEventListener("DOMContentLoaded", function () {
  // Definir chartData fuera de la función fetchDataAndCreateChart
  let chartData;

  // Función para hacer la solicitud al servidor y crear el gráfico
  async function fetchDataAndCreateChart() {
    const response = await fetch('/datos-compras');
    const data = await response.json();

    // Procesar los datos recibidos
    const mesesConIndice = data.compras.map((row, index) => ({ mes: row.Mes, index: index }));
    mesesConIndice.sort((a, b) => a.mes - b.mes); // Ordenar meses

    const mesesOrdenados = mesesConIndice.map(item => item.mes);
    const compras = data.compras.map(row => row.Total);
    const detalles = data.detalles.map(row => row.Detalles);
    const proveedores = data.proveedores.map(row => row.Proveedores);

    // Encontrar el valor máximo de compras
    const maxCompras = Math.max(...compras);

    // Normalizar los datos de detalles y proveedores
    const detallesNormalized = detalles.map(value => value / 1000); // Dividir por 1000 para mostrar en miles
    const proveedoresNormalized = proveedores.map(value => value / 10); // Dividir por 10 para mostrar en decenas

    // Dividir los valores de compras por 1 millón para que se muestren en una escala legible
    const comprasNormalized = compras.map(value => value / 1000000);

    chartData = {
      labels: mesesOrdenados,
      datasets: [
        {
          label: 'Compras',
          data: comprasNormalized,
          borderColor: 'blue',
          borderWidth: 2,
          fill: false
        },
        {
          label: 'Detalles',
          data: detallesNormalized.map((value, index) => ({ x: mesesOrdenados[index], y: value })),
          borderColor: 'red',
          borderWidth: 2,
          borderDash: [5, 5],
          fill: false
        },
        {
          label: 'Proveedores',
          data: proveedoresNormalized.map((value, index) => ({ x: mesesOrdenados[index], y: value })),
          borderColor: 'green',
          backgroundColor: 'rgba(0, 255, 0, 0.2)',
          borderWidth: 2
        }
      ]
    };

    const chartOptions = {
      scales: {
        yAxes: [{
          ticks: {
            // Formatear las etiquetas del eje y para mostrar valores en millones para compras, en miles para detalles y en decenas para proveedores
            callback: function(value, index, values) {
              if (this.chart.data.datasets[index].label === 'Compras') {
                return value + 'M';
              } else if (this.chart.data.datasets[index].label === 'Detalles') {
                return value + 'K';
              } else {
                return value * 10; // Multiplicar por 10 para mostrar en decenas para Proveedores
              }
            }
          }
        }]
      }
    };

    // Crear el gráfico
    const ctx = document.getElementById('line-chart').getContext('2d');
    new Chart(ctx, {
      type: 'line',
      data: chartData,
      options: chartOptions
    });
  }

  // Llamar a la función cuando se cargue la página
  window.onload = fetchDataAndCreateChart;
});

            // Hacer una solicitud al servidor para obtener los datos
fetch('/datos')
  .then(response => response.json())
  .then(data => {
    // Actualizar los divs con los datos recibidos
    document.getElementById('ventasMes').innerText =  data.ventasMes + ' Bs';
    document.getElementById('ventasSemana').innerText = data.ventasSemana + ' Bs';
    document.getElementById('clientesRegistradosMes').innerText =  data.clientesRegistradosMes;
    document.getElementById('clientesTotales').innerText = data.clientesTotales;
    document.getElementById('comprasTotales').innerText =  data.comprasTotales;
    document.getElementById('productosComprados').innerText = data.productosComprados;
  })
  .catch(error => console.error('Error al obtener los datos:', error));


  
  document.addEventListener("DOMContentLoaded", async function () {
  // Función para hacer la solicitud al servidor y mostrar la lista de proveedores
  async function fetchProveedoresAndShowLista() {
    const response = await fetch('/proveedores-y-productos');
    const data = await response.json();

    // Obtener el div donde mostraremos la lista de proveedores
    const proveedoresListaDiv = document.getElementById('proveedores-lista');

    // Crear el contenido HTML para la lista de proveedores y productos

    let htmlContent = '<ul>';
    data.forEach(proveedor => {
      htmlContent += `<li>${proveedor.Nombre}: ${proveedor.Cantidad_Productos} productos comprados</li>`;
    });
    htmlContent += '</ul>';

    // Mostrar el contenido dentro del div
    proveedoresListaDiv.innerHTML = htmlContent;
  }

  // Llamar a la función para mostrar la lista de proveedores cuando se cargue la página
  await fetchProveedoresAndShowLista();
});



</script>


</html>
