<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="shortcut icon" href="#" />
  <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
  <title>DataTables estilo Bootstrap 5 - NodeJS y Express</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/css/bootstrap.min.css"
    integrity="sha384-DhY6onE6f3zzKbjUPRc2hOzGAdEf4/Dz+WJwBvEYL/lkkIsI3ihufq9hk9K4lVoK" crossorigin="anonymous" />
  <link rel="icon" href="resources/images/fevicon.png" type="image/png" />
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/dataTables.bootstrap5.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.min.css" />
  <style>
    table.dataTable thead {
      background-color: #485464;
    color: white;
    }
 
    .ftable{
      background-color: rgba(224, 223, 223, 0.433);
      color: rgb(0, 0, 0);
      width: 100%;
    }
    .btn-group img {
    max-width: 24px; /* Define el ancho máximo del icono */
    max-height: 24px; /* Define el alto máximo del icono */
    }
    body{
      background-color: #00000000;
    }
    @media screen and (max-width: 768px) {
    #tablaProductosAgregados {
        /* Ajustes específicos para pantallas pequeñas */
        display: block; /* Cambiar a 'block' para mostrar la tabla como un bloque */
        overflow-x: auto; /* Permitir scroll horizontal si es necesario */
    }

    #tablaProductosAgregados thead th,
    #tablaProductosAgregados tbody td {
        /* Ajustes para celdas en pantallas pequeñas */
        text-align: left; /* Alinear texto a la izquierda */
        white-space: nowrap; /* Evitar saltos de línea en celdas */
    }
  }
  </style>
</head>
<body>
  <div class="container-fluid">
    <H1 id="tituloImpresion" class="" style="text-align: left; font-family: Arial,sans-serif; font-size: 25px; padding: 20px 0; background-color: #485464; color: #ffffff;">&nbsp;&nbsp;&nbsp;&nbsp;Tablero de control - Empleados</H1>

    <a id="btnCrear" class="btn btn-group btn-light mt-2" style="font-size: 20px;">
      <img src="resources/images/iconos/create.svg" alt="Crear"> &nbsp;Crear
    </a>
    <a id="btnActualizar" class="btn btn-group btn-light mt-2" style="font-size: 20px;">
      <img src="resources/images/iconos/refresh.svg" alt="Crear"> &nbsp;Actualizar
    </a>
    <a id="btnExportar" class="btn btn-group btn-light mt-2" style="font-size: 20px;">
      <img src="resources/images/iconos/export.svg" alt="Crear"> &nbsp;Exportar CSV
    </a>
    <a href="/impre_empleados" class="btn btn-group btn-light mt-2" style="font-size: 20px;" target="_blank">
      <img src="resources/images/iconos/print.svg" alt="Crear"> &nbsp;Imprimir
    </a>
    <div class="row shadow-lg p-3 mb-5 ftable" id="empleadosContainer">
      <div class="col">
        <div class="table-responsive">
          <table id="tablaEmpleados" class="table table-striped table-bordered" style="width: 100%">
            <thead>
              <tr>
                <th class="text-center">ID</th>
                <th class="text-center">Nombre</th>
                <th class="text-center">Apellido</th>
                <th class="text-center">Fecha de Nacimiento</th>
                <th class="text-center">Dirección</th>
                <th class="text-center">Teléfono</th>
                <th class="text-center">Email</th>
                <th class="text-center">CI</th>
                <th class="text-center">Teléfono de Referencia</th>
                <th class="text-center">ID Departamento</th>
                <th class="text-center">ID Ciudad</th>
                <th class="text-center">ID Género</th>
                <th class="text-center">ID Rol</th>
                <th class="text-center">Contraseña</th>
                <th class="text-center">Fotografía</th>
                <th class="text-center">Estado</th>
                <th class="text-center">Grado</th>
                <th class="text-center">ID Sucursal</th>
                <th class="text-center">ID Caja</th>
                <th class="text-center" style="width: 150px;">ACCIONES</th>
              </tr>
            </thead>
            <tbody>
              <% results.forEach(function(empleado) { %>
                <tr>
                  <td class="text-center"><%= empleado.ID_Empleado %></td>
                  <td class="text-center"><%= empleado.Nombre %></td>
                  <td class="text-center"><%= empleado.Apellido %></td>
                  <td class="text-center"><%= empleado.Fecha_Nacimiento %></td>
                  <td class="text-center"><%= empleado.Dirección %></td>
                  <td class="text-center"><%= empleado.Teléfono %></td>
                  <td class="text-center"><%= empleado.Email %></td>
                  <td class="text-center"><%= empleado.CI %></td>
                  <td class="text-center"><%= empleado.Telefono_referencia %></td>
                  <td class="text-center"><%= empleado.NombreDepartamento %></td>
                  <td class="text-center"><%= empleado.NombreCiudad %></td>
                  <td class="text-center"><%= empleado.NombreGenero %></td>
                  <td class="text-center"><%= empleado.NombreRol %></td>
                  <td class="text-center"><%= empleado.Contrasena %></td>
                  <td class="text-center"><img src='fotos/img_empleados/<%= empleado.Fotografia %>' alt="" width="120px" height="120px"></td>
                  <td class="text-center">
                    <% if (empleado.Estado === 1) { %>
                        <span class="badge bg-success">Activo</span>
                    <% } else if (empleado.Estado === 2) { %>
                        <span class="badge bg-danger">Eliminado</span>
                    <% } %>
                </td>
                <td class="text-center">
                    <% if (empleado.Grado === 1 || empleado.Grado === 2 || empleado.Grado === 3) { %>
                        <span class="badge bg-success">Activo</span>
                    <% } else if (empleado.Grado === 4) { %>
                        <span class="badge bg-warning">Bloqueado</span>
                    <% } %>
                </td>
                
                  <td class="text-center"><%= empleado.NombreSucursal %></td>
                  <td class="text-center"><%= empleado.ID_Caja %></td>
                  <td>
                    <div class="text-center">
                      <div class="btn-group">
                        <a href="#" class="btn btn-sm btnEditar"><img src="resources/images/iconos/edit.svg" alt="Editar"></a>
                        <a href="#" class="btn btn-sm btnBorrar"><img src="resources/images/iconos/delete.svg" alt="Eliminar"></a>
                        <a href="#" class="btn btn-sm btnCopiar"><img src="resources/images/iconos/copy.svg" alt="Copiar"></a>
                      </div>
  
                    </div>
  
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  
  <!--Modal para CRUD-->
  <div id="modalCRUD" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel"></h5>
        </div>
        <form id="formFotos" action="/fotos" enctype="multipart/form-data" method="POST">
          <div class="modal-body row">
            <label for="Fotografia" class="col-form-label">Fotografía</label>
            <input type="file" class="form-control" id="Fotografia" name="Fotografia" accept="image/*" required/>
            <div id="vista-previa"></div>
            <input type="submit" value="Agregar Fotografia"  class="btn btn-success">
          </div>
        </form>
        <form id="formEmpleados">
          <div class="modal-body">
            <input id="ID_Empleado" hidden />
            <label for="Nombre" class="col-form-label">Nombre</label>
            <input type="text" class="form-control" id="Nombre" maxlength="50" required />
            <label for="Apellido" class="col-form-label">Apellido</label>
            <input type="text" class="form-control" id="Apellido" maxlength="50" required />
            <label for="Fecha_Nacimiento" class="col-form-label">Fecha de Nacimiento</label>
            <input type="date" class="form-control" id="Fecha_Nacimiento" required />
            <label for="Dirección" class="col-form-label">Dirección</label>
            <input type="text" class="form-control" id="Dirección" maxlength="100" required />
            <label for="Teléfono" class="col-form-label">Teléfono</label>
            <input type="text" class="form-control" id="Teléfono" pattern="[0-9]{7,14}" required />
            <label for="Email" class="col-form-label">Email</label>
            <input type="email" class="form-control" id="Email" maxlength="100" required />
            <div id="emailError" style="color: red;"></div> <!-- Para mostrar mensajes de error -->
            <label for="CI" class="col-form-label">CI</label>
            <input type="text" class="form-control" id="CI" pattern="[0-9]{7,14}" required />
            <label for="Telefono_referencia" class="col-form-label">Teléfono de Referencia</label>
            <input type="text" class="form-control" id="Telefono_referencia" pattern="[0-9]{7,14}" required />

            <label for="ID_Ciudad" class="col-form-label">Ciudad</label>
            <select class="form-select" id="ID_Ciudad" name="ID_Ciudad">
            <option value="">Seleccionar Ciudad</option>
            </select>

            <label for="ID_Departamento" class="col-form-label">Departamento</label>
            <select class="form-select" id="ID_Departamento" name="ID_Departamento">
            <option value="">Seleccionar Departamento</option>
            </select>

            <label for="ID_Genero" class="col-form-label">Género</label>
            <select class="form-select" id="ID_Genero" name="ID_Genero">
            <option value="">Seleccionar Género</option>
            </select>

            <label for="ID_Rol" class="col-form-label">Rol</label>
            <select class="form-select" id="ID_Rol" name="ID_Rol">
            <option value="">Seleccionar Rol</option>
            </select>

            <label for="ID_Sucursal" class="col-form-label">Sucursal</label>
            <select class="form-select" id="ID_Sucursal" name="ID_Sucursal">
            <option value="">Seleccionar Sucursal</option>
            </select>
   
            <label for="ID_Caja" class="col-form-label">Caja</label>
            <select class="form-select" id="ID_Caja" name="ID_Caja">
            <option value="">Seleccionar Caja</option>
            </select>
   
            <label for="Contrasena" class="col-form-label">Contraseña</label>
            <input type="password" class="form-control" id="Contrasena" maxlength="100" required />

            <label for="Estado" class="col-form-label">Estado</label>
            <select class="form-select" id="Estado" name="Estado">
              <option value="1">Estado Activo</option>
              <option value="2">Estado Bloqueado</option>
            </select>

            <label for="Grado" class="col-form-label">Grado</label>
            <select class="form-select" id="Grado" name="Grado">
              <option value="1">Estado Activo</option>
              <option value="4">Estado Bloqueado</option>
            </select>
            


          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-light" data-dismiss="modal">Cancelar</button>
            <button type="submit" id="btnGuardar" class="btn btn-dark">Guardar</button>
          </div>
        </form>
      </div>
    </div>
  </div>


<script type="text/javascript" language="javascript" src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/js/bootstrap.min.js" integrity="sha384-5h4UG+6GOuV9qXh6HqOLwZMY4mnLPraeTrjT5v07o347pj6IkfuoASuGBhfDsp3d" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.all.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>
<script>
  $(document).ready(function () {
      let url = "/empleados/"; // Define la variable url aquí

      let opcion = null;
      let ID_Empleado, Nombre, Apellido, Fecha_Nacimiento, Dirección, Teléfono, Email, CI, Telefono_referencia, ID_Departamento, ID_Ciudad, ID_Genero, ID_Rol, Contrasena, Fotografia, Estado, Grado, ID_Sucursal, ID_Caja;
      var empleadosEnviados = false;
      var fotosEnviadas = false;
      let tablaEmpleados = $("#tablaEmpleados").DataTable({
          json: {
              url: url,
              dataSrc: "",
          },
          columns: [
              { data: "ID_Empleado" },
              { data: "Nombre" },
              { data: "Apellido" },
              { data: "Fecha_Nacimiento" },
              { data: "Dirección" },
              { data: "Teléfono" },
              { data: "Email" },
              { data: "CI" },
              { data: "Telefono_referencia" },
              { data: "ID_Departamento" },
              { data: "ID_Ciudad" },
              { data: "ID_Genero" },
              { data: "ID_Rol" },
              { data: "Contrasena" },
              { data: "Fotografia" },
              { data: "Estado" },
              { data: "Grado" },
              { data: "ID_Sucursal" },
              { data: "ID_Caja" },
              {
                  defaultContent:
                      "<div class='text-center'><div class='btn-group'><button class='btn btn-info btn-sm btnEditar'>Editar</button><button class='btn btn-danger btn-sm btnBorrar'>Borrar</button></div></div>",
              },
          ],
          language: {
              url: "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json",
          },
      });

      //#region boton borrar
      $("#tablaEmpleados").on("click", ".btnBorrar", function () {
          var data = tablaEmpleados.row($(this).parents("tr")).data(); // Obtener datos de la fila
          var id = data.ID_Empleado;
          opcion = "eliminar"; // Establecer la opción como eliminar
          Swal.fire({
              title: "¿Estás seguro?",
              text: "¡No podrás revertir esto!",
              icon: "warning",
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Sí, eliminarlo!",
          }).then((result) => {
              if (result.isConfirmed) {
                  // Hacer la petición para eliminar
                  $.ajax({
                      type: "POST",
                      url: url + id,
                      data: { opcion: opcion },
                      success: function (data) {
                          Swal.fire(
                              "¡Eliminado!",
                              "El registro ha sido eliminado.",
                              "success"
                          ).then((result) => {
                              if (result.isConfirmed) {
                                  window.location.reload(); // Recarga la página si se confirma la acción
                              }
                          });
                      },
                  });
              }
          });
      });
      //#endregion

      //#region boton editar
      $("#tablaEmpleados").on("click", ".btnEditar", function () {
          var data = tablaEmpleados.row($(this).parents("tr")).data(); // Obtener datos de la fila
          $("#exampleModalLabel").text("Editar Empleado"); // Cambiar el título del modal
          $("#ID_Empleado").val(data.ID_Empleado); // Llenar el campo ID_Empleado
          $("#Nombre").val(data.Nombre); // Llenar el campo Nombre
          $("#Apellido").val(data.Apellido); // Llenar el campo Apellido
          $("#Fecha_Nacimiento").val(data.Fecha_Nacimiento); // Llenar el campo Fecha_Nacimiento
          $("#Dirección").val(data.Dirección); // Llenar el campo Dirección
          $("#Teléfono").val(data.Teléfono); // Llenar el campo Teléfono
          $("#Email").val(data.Email); // Llenar el campo Email
          $("#CI").val(data.CI); // Llenar el campo CI
          $("#Telefono_referencia").val(data.Telefono_referencia); // Llenar el campo Telefono_referencia
          $("#ID_Departamento").val(data.ID_Departamento); // Llenar el campo ID_Departamento
          $("#ID_Ciudad").val(data.ID_Ciudad); // Llenar el campo ID_Ciudad
          $("#ID_Genero").val(data.ID_Genero); // Llenar el campo ID_Genero
          $("#ID_Rol").val(data.ID_Rol); // Llenar el campo ID_Rol
          $("#Contrasena").val(data.Contrasena); // Llenar el campo Contrasena
          $("#Estado").val(data.Estado); // Llenar el campo Estado
          $("#Grado").val(data.Grado); // Llenar el campo Grado
          $("#ID_Sucursal").val(data.ID_Sucursal); // Llenar el campo ID_Sucursal
          $("#ID_Caja").val(data.ID_Caja); // Llenar el campo ID_Caja
          $("#modalCRUD").modal("show"); // Mostrar el modal
          opcion = "editar"; // Establecer la opción como editar
      });
      //#endregion

      //#region submit - formulario crear/editar
      $("#formEmpleados").submit(function (e) {
          e.preventDefault(); // Evitar el envío del formulario por defecto

          // Obtener los datos del formulario
          var formData = {
              ID_Empleado: $("#ID_Empleado").val(),
              Nombre: $("#Nombre").val(),
              Apellido: $("#Apellido").val(),
              Fecha_Nacimiento: $("#Fecha_Nacimiento").val(),
              Dirección: $("#Dirección").val(),
              Teléfono: $("#Teléfono").val(),
              Email: $("#Email").val(),
              CI: $("#CI").val(),
              Telefono_referencia: $("#Telefono_referencia").val(),
              ID_Departamento: $("#ID_Departamento").val(),
              ID_Ciudad: $("#ID_Ciudad").val(),
              ID_Genero: $("#ID_Genero").val(),
              ID_Rol: $("#ID_Rol").val(),
              Contrasena: $("#Contrasena").val(),
              Estado: $("#Estado").val(),
              Grado: $("#Grado").val(),
              ID_Sucursal: $("#ID_Sucursal").val(),
              ID_Caja: $("#ID_Caja").val(),
              opcion: opcion,
          };

          // Enviar la solicitud al servidor
          $.ajax({
              type: "POST",
              url: url + formData.ID_Empleado, // Utilizamos el ID para identificar el empleado a editar
              data: formData,
              success: function (data) {
                  empleadosEnviados = true;
                  checkIfAllFormsSubmitted();
              },
              error: function (err) {
                  console.error("Error al crear/editar empleado:", err);
              },
          });
      });

      $("#formFotos").submit(function (e) {
          e.preventDefault(); // Evitar el envío del formulario por defecto

          var formData = new FormData(this);

          $.ajax({
              type: "POST",
              url: "/fotos", // URL donde se enviarán las fotos
              data: formData,
              processData: false,
              contentType: false,
              success: function (data) {
                  console.log("Fotos subidas con éxito");
                  // Marcar el formulario de fotos como enviado
                  fotosEnviadas = true;
                  checkIfAllFormsSubmitted();
              },
              error: function (err) {
                  console.error("Error al subir las fotos:", err);
              },
          });
      });

      function checkIfAllFormsSubmitted() {
          if (empleadosEnviados && fotosEnviadas) {
              $("#modalCRUD").modal("hide");
              window.location.reload();
          }
      }

      // Evento click para el botón de crear
      $("#btnCrear").click(function () {
          // Limpiar los campos del formulario de empleados
          $("#ID_Empleado").val("");
          $("#Nombre").val("");
          $("#Apellido").val("");
          $("#Fecha_Nacimiento").val("");
          $("#Dirección").val("");
          $("#Teléfono").val("");
          $("#Email").val("");
          $("#CI").val("");
          $("#Telefono_referencia").val("");
          $("#ID_Departamento").val("");
          $("#ID_Ciudad").val("");
          $("#ID_Genero").val("");
          $("#ID_Rol").val("");
          $("#Contrasena").val("");
          $("#Fotografia").val("");
          $("#Estado").val("");
          $("#Grado").val("");
          $("#ID_Sucursal").val("");
          $("#ID_Caja").val("");
          $("#exampleModalLabel").text("Crear Empleado"); // Cambiar el título del modal
          $("#modalCRUD").modal("show"); // Mostrar el modal
          opcion = "crear"; // Establecer la opción como crear
      });
      //#endregion

      //#region boton actualizar
      $("#btnActualizar").click(function () {
          // Recarga la página actual
          location.reload();
      });
      //#endregion

      //#region boton exportar xlsx (excel)
      $("#btnExportar").click(function () {
          // Crear un nuevo libro de Excel
          var wb = XLSX.utils.book_new();

          // Convertir la tabla de empleados a una hoja de Excel
          var ws = XLSX.utils.json_to_sheet(tablaEmpleados.data().toArray());

          // Agregar la hoja al libro
          XLSX.utils.book_append_sheet(wb, ws, "Empleados");

          // Exportar el libro a un archivo .xlsx
          XLSX.writeFile(wb, "empleados.xlsx");
      });
      //#endregion

      //#region boton copiar al portapapeles
      $("#btnCopiar").click(function () {
          // Crear una variable para almacenar el texto de la tabla
          var textoTabla = "";

          // Iterar a través de las filas de la tabla
          tablaEmpleados.rows().every(function () {
              // Obtener los datos de la fila actual
              var data = this.data();

              // Agregar los datos de la fila al texto de la tabla
              textoTabla += Object.values(data).join("\t") + "\n";
          });

          // Copiar el texto de la tabla al portapapeles
          navigator.clipboard.writeText(textoTabla).then(
              function () {
                  console.log("Texto copiado al portapapeles con éxito");
              },
              function (err) {
                  console.error("Error al copiar el texto al portapapeles:", err);
              }
          );
      });
      //#endregion

      //#region validacion email
      $("#Email").on("blur", function () {
          var email = $(this).val();
          if (!validarEmail(email)) {
              alert("Por favor, ingrese un correo electrónico válido.");
              $(this).focus();
          }
      });

      function validarEmail(email) {
          var regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          return regex.test(email);
      }
      //#endregion
  });
  document.getElementById('Fotografia').addEventListener('change', function(event) {
        // Obtiene el archivo seleccionado por el usuario
        const archivo = event.target.files[0];

        // Verifica si se seleccionó un archivo
        if (archivo) {
            // Crea un objeto de tipo FileReader para leer el contenido del archivo
            const lector = new FileReader();

            // Define una función de retrollamada que se ejecutará cuando la lectura del archivo esté completa
            lector.onload = function(e) {
                // Crea un elemento de imagen para mostrar la vista previa de la imagen
                const imagen = document.createElement('img');
                imagen.src = e.target.result; // Establece la fuente de la imagen como los datos del archivo
                imagen.style.maxWidth = '200px'; // Establece un ancho máximo para la vista previa
                document.getElementById('vista-previa').innerHTML = ''; // Borra cualquier vista previa existente
                document.getElementById('vista-previa').appendChild(imagen); // Agrega la imagen al div de vista previa
            };

            // Lee el contenido del archivo como una URL de datos (data URL)
            lector.readAsDataURL(archivo);
        }
    });
    function subirImagen() {
            const input = document.getElementById('imagen');
            const file = input.files[0];
            const formData = new FormData();
            formData.append('imagen', file);

            fetch('/empleados/cargar-imagen', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                console.log('Ruta de la imagen guardada:', data);
            })
            .catch(error => {
                console.error('Error al subir la imagen:', error);
            });
        }
        function verificarEmail() {
    var email = $("#Email").val(); // Obtener el valor del campo de correo electrónico

    // Realizar una solicitud AJAX al servidor para verificar el correo electrónico
    $.ajax({
      type: "POST", // Método de la solicitud
      url: "/verificar-correo", // Ruta del servidor para verificar el correo electrónico
      data: { email: email }, // Datos a enviar al servidor
      success: function (response) {
        // Si el correo electrónico está en uso, mostrar un mensaje de error
        $("#emailError").text("El correo electrónico ya está registrado");
      },
      error: function (error) {
        console.error("Error al verificar el correo electrónico:", error);
      }
    });
  }

  // Evento para verificar el correo electrónico cuando se pierde el foco del campo
  $("#Email").blur(verificarEmail);

  $(document).ready(function() {
    // Función para obtener opciones de un endpoint
    function obtenerOpciones(endpoint, selector) {
        $.ajax({
        url: endpoint,
        method: 'GET',
        dataType: 'json',
        success: function(data) {
            // Limpiar opciones previas
            $(selector).empty();
            // Agregar opción por defecto
            $(selector).append('<option value="">Seleccionar</option>');
            // Llenar opciones con datos recibidos
            data.forEach(function(item) {
            $(selector).append(`<option value="${item.id}">${item.nombre}</option>`);
            });
        },
        error: function(err) {
            console.error('Error al obtener datos:', err);
        }
        });
    }

    // Cargar opciones para Ciudad
    obtenerOpciones('/api/ciudades', '#ID_Ciudad');
    // Cargar opciones para Departamento
    obtenerOpciones('/api/departamentos', '#ID_Departamento');
    obtenerOpciones('/api/generos', '#ID_Genero');
    obtenerOpciones('/api/roles', '#ID_Rol');
    obtenerOpciones('/api/sucursales', '#ID_Sucursal');
    obtenerOpciones('/api/cajas', '#ID_Caja');
    });

</script>


</body>

</html>